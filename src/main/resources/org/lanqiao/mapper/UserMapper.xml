<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lanqiao.dao.UserDao">
	<resultMap id="UserResult" type="org.lanqiao.entity.User">
		<id column="userId" jdbcType="INTEGER" property="userId" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="userName" jdbcType="VARCHAR" property="userName" />
		<result column="sex" jdbcType="VARCHAR" property="sex" />
		<result column="tel" jdbcType="VARCHAR" property="tel" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="logo" jdbcType="INTEGER" property="logo" />
	</resultMap>
	<sql id="Base_Column_List">
		userId, account, password, userName, sex, tel, email, logo
	</sql>

	<!-- 获取所有用户信息 -->
	<select id="selectAllUsers" resultMap="UserResult">
		select
		<include refid="Base_Column_List" />
		from user
	</select>
	<!-- 修改用户状态 -->
	<update id="updateUserStatus" parameterType="org.lanqiao.entity.User">
		update user
		set logo = #{logo,jdbcType=INTEGER}
		where account = #{account,jdbcType=VARCHAR}
	</update>



	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="UserResult">
		select
		<include refid="Base_Column_List" />
		from user
		where userId = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where userId = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="org.lanqiao.entity.User">
		insert into user (userId, account, password,
		userName, sex, tel,
		email, logo)
		values (#{userId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{logo,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="org.lanqiao.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				userId,
			</if>
			<if test="account != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userName != null">
				userName,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="logo != null">
				logo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="account != null">
				#{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="logo != null">
				#{logo,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.User">
		update user
		<set>
			<if test="account != null">
				account = #{account,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				userName = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="logo != null">
				logo = #{logo,jdbcType=INTEGER},
			</if>
		</set>
		where userId = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.lanqiao.entity.User">
		update user
		set account = #{account,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		userName = #{userName,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		logo = #{logo,jdbcType=INTEGER}
		where userId = #{userId,jdbcType=INTEGER}
	</update>
</mapper>